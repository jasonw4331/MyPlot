name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  build-php:
    name: Prepare PHP
    runs-on: ${{ matrix.image }}

    strategy:
      matrix:
        image: [ubuntu-20.04]
        php: [8.0.11]

    steps:
      - name: Build and prepare PHP cache
        uses: pmmp/setup-php-action@e232f72a4330a07aae8418e8aa56b64efcdda636
        with:
          php-version: ${{ matrix.php }}
          install-path: "./bin"

  phpstan:
    name: PHPStan analysis
    needs: build-php
    runs-on: ${{ matrix.image }}

    strategy:
      fail-fast: false
      matrix:
        image: [ubuntu-20.04]
        php: [8.0.11]

    steps:
      - name: Checkout PocketMine
        uses: actions/checkout@v2
        with:
          repository: pmmp/PocketMine-MP
          submodules: true
          ref: stable
          path: "./"

      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          path: "./plugins/${{ github.event.repository.name }}"

      - name: Replace PocketMine Phpstan config
        run: cp -f ./plugins/${{ github.event.repository.name }}/tests/phpstan.neon.dist phpstan.neon.dist

      - name: Delete poggit Phpstan config
        run: rm -f ./plugins/${{ github.event.repository.name }}/phpstan.neon.dist

      - name: Setup PHP
        uses: pmmp/setup-php-action@e232f72a4330a07aae8418e8aa56b64efcdda636
        with:
          php-version: ${{ matrix.php }}
          install-path: "./bin"

      - name: Install Composer
        run: curl -sS https://getcomposer.org/installer | php

      - name: Restore Composer package cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/composer/files
            ~/.cache/composer/vcs
          key: "composer-v2-cache-${{ matrix.php }}-${{ hashFiles('./composer.lock') }}"
          restore-keys: |
            composer-v2-cache-

      - name: Install Composer dependencies
        run: php composer.phar install --prefer-dist --no-interaction

      - name: Run PHPStan
        run: ./vendor/bin/phpstan analyze --no-progress --memory-limit=2G

#  phpunit:
#    name: PHPUnit tests
#    needs: build-php
#    runs-on: ${{ matrix.image }}
#    strategy:
#      fail-fast: false
#      matrix:
#        image: [ubuntu-20.04]
#        php: [8.0.11]
#
#    steps:
#      - name: Checkout PocketMine
#        uses: actions/checkout@v2
#        with:
#          repository: pmmp/PocketMine-MP
#          submodules: true
#          ref: stable
#          path: "./"
#
#      - name: Checkout Repo
#        uses: actions/checkout@v2
#        with:
#          path: "./plugins/${{ github.event.repository.name }}"
#
#      - name: Setup PHP
#        uses: pmmp/setup-php-action@e232f72a4330a07aae8418e8aa56b64efcdda636
#        with:
#          php-version: ${{ matrix.php }}
#          install-path: "./bin"
#
#      - name: Install Composer
#        run: curl -sS https://getcomposer.org/installer | php
#
#      - name: Restore Composer package cache
#        uses: actions/cache@v2
#        with:
#          path: |
#            ~/.cache/composer/files
#            ~/.cache/composer/vcs
#          key: "composer-v2-cache-${{ matrix.php }}-${{ hashFiles('./composer.lock') }}"
#          restore-keys: |
#            composer-v2-cache-
#
#      - name: Install Composer dependencies
#        run: php composer.phar install --prefer-dist --no-interaction
#
#      - name: Run PHPUnit tests
#        run: ./vendor/bin/phpunit --bootstrap vendor/autoload.php --fail-on-warning ./plugins/${{ github.event.repository.name }}/tests/phpunit

  integration:
    name: Integration tests
    needs: build-php
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        image: [ubuntu-20.04]
        php: [8.0.11]

    steps:
      - name: Checkout PocketMine
        uses: actions/checkout@v2
        with:
          repository: pmmp/PocketMine-MP
          submodules: true
          ref: stable
          path: "./"

      - name: Checkout Repo
        uses: actions/checkout@v2
        with:
          path: "./plugins/${{ github.event.repository.name }}"

      - name: Setup PHP
        uses: pmmp/setup-php-action@e232f72a4330a07aae8418e8aa56b64efcdda636
        with:
          php-version: ${{ matrix.php }}
          install-path: "./bin"

      - name: Install Composer
        run: curl -sS https://getcomposer.org/installer | php

      - name: Restore Composer package cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/composer/files
            ~/.cache/composer/vcs
          key: "composer-v2-cache-${{ matrix.php }}-${{ hashFiles('./composer.lock') }}"
          restore-keys: |
            composer-v2-cache-

      - name: Install Composer dependencies
        run: php composer.phar install --no-dev --prefer-dist --no-interaction

      - name: Run integration tests
        run: chmod +x ./plugins/${{ github.event.repository.name }}/tests/integration-action.sh && ./plugins/${{ github.event.repository.name }}/tests/integration-action.sh -t4

  codestyle:
    name: Code Style checks
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Setup PHP and tools
        uses: shivammathur/setup-php@2.15.0
        with:
          php-version: 8.0
          tools: php-cs-fixer:3.2

      - name: Run PHP-CS-Fixer
        run: php-cs-fixer fix --dry-run --diff
